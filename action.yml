name: 'Vapor CI Support Tools'
description: 'Provides common support and beahvior for Vapor CI workflows via the new GitHub Actions support for "composite" actions.'
inputs:
  command:
    description: 'Which support tooling subfunction to execute.'
    required: true
outputs:
  unit-test-swift-versions:
    description: 'The set of Swift version specifiers to run unit tests against.'
    value: ${{ steps.unit-test-swift-versions-impl.outputs.data }}
  unit-test-swift-runners:
    description: 'The set of Swift runners (underlying OS) to run unit tests on.'
    value: ${{ steps.unit-test-swift-runners-impl.outputs.data }}
  integration-test-swift-versions:
    description: 'The set of Swift version specifiers to run integration tests against.'
    value: ${{ steps.integration-test-swift-versions-impl.outputs.data }}
  integration-test-swift-runners:
    description: 'The set of Swift runners (underlying OS) to run integration tests on.'
    value: ${{ steps.integration-test-swift-runners-impl.outputs.data }}
runs:
  using: "composite"
  steps:
    - id: unit-test-swift-versions-impl
      run: |
        if [[ '${{ inputs.command }}' == 'unit-test-swift-versions' ]]; then echo "::set-output name=data::UNIMPLEMENTED"; fi
      shell: bash
    - id: unit-test-swift-runners-impl
      run: |
        if [[ '${{ inputs.command }}' == 'unit-test-swift-runners' ]]; then echo "::set-output name=data::UNIMPLEMENTED"; fi
      shell: bash
    - id: integration-test-swift-versions-impl
      run: |
        if [[ '${{ inputs.command }}' == 'integration-test-swift-versions' ]]; then echo "::set-output name=data::UNIMPLEMENTED"; fi
      shell: bash
    - id: integration-test-swift-runners-impl
      run: |
        if [[ '${{ inputs.command }}' == 'integration-test-swift-runners' ]]; then echo "::set-output name=data::UNIMPLEMENTED"; fi
      shell: bash
