name: first-issues-to-beginner-project-board
on:
  workflow_call:
    inputs:
      labelsJson:
        type: string
        description: The type of issue
        required: true
    secrets:
      PROJECT_BOARD_AUTOMATION_PAT:
        required: true

jobs:
  setup-matrixJson:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3.0.1
        with:
          repository: 'vapor/ci'
      - name: handle input  
        id: set-matrix
        run: |
          sudo bash script.sh ${{ inputs.labelsJson }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  # sanity-check:
  #   needs: setup-matrixJson
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJSON(needs.setup-matrixJson.outputs.matrix) }}
  #   if: contains(github.event.issue.labels.*.name, 'good first issue') || contains(github.event.issue.labels.*.name, 'help wanted')
  #   steps:
  #     - name: Matrix input
  #       run: |
  #         echo "label ${{ matrix.label }} ${{ matrix.label == 'good first issue' }}"
  #         echo "project board ${{ matrix.project }} ${{ matrix.project == 'Beginner Issues' }}"

  #     - name: Run on assigned
  #       if: |
  #         github.event.action == 'assigned' &&
  #         ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
  #         (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))
  #       run: |
  #         echo "event assigned ${{ github.event.action == 'assigned' }}"

  #     - name: Run on labeled, unassigned or reopened
  #       if: | 
  #         (github.event.action == 'labeled' ||
  #         github.event.action == 'unassigned' ||
  #         github.event.action == 'reopened') &&
  #         ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
  #         (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))

  #       run: |
  #         echo "event labeled ${{ github.event.action == 'labeled' }}"
  #         echo "event unassigned ${{ github.event.action == 'unassigned' }}"
  #         echo "event reopened ${{ github.event.action == 'reopened' }}"

  #     - name: Run on closed
  #       if: | 
  #         github.event.action == 'closed' &&
  #         ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
  #         (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))
  #       run: |
  #         echo "event closed ${{ github.event.action == 'closed' }}"

  #     - name: Run on unlabeled
  #       if: ${{ !contains(github.event.issue.labels.*.name, matrix.label) }} &&
  #         github.event.action == 'unlabeled'
  #       run: |
  #         echo "event unlabeled ${{ github.event.action == 'unlabeled' }}"

  #   continue-on-error: true

  manage_project_issues:
    needs: setup-matrixJson
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup-matrixJson.outputs.matrix) }}
    runs-on: ubuntu-latest    
    if: contains(github.event.issue.labels.*.name, 'good first issue') || contains(github.event.issue.labels.*.name, 'help wanted')  
    steps:
        # When an issue that is open is labeled, unassigned or reopened without a assigned member
        # create or move the card to "To do"
      - name: Create or Update Project Card
        if: | 
          (github.event.action == 'labeled' ||
          github.event.action == 'unassigned' ||
          github.event.action == 'reopened') &&
          ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
          (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))
        uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          project: ${{ matrix.project }}
          column: 'To do'
          repo-token: ${{ secrets.PROJECT_BOARD_AUTOMATION_PAT }}

        # When an issue that is open is assigned and has an assigned member
        # create or move the card to "In progress"
      - name: Assign Project Card
        if: |
          github.event.action == 'assigned' &&
          ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
          (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))
        uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          project: ${{ matrix.project }}
          column: 'In progress'
          repo-token: ${{ secrets.PROJECT_BOARD_AUTOMATION_PAT }}

        # When an issue is closed
        # Create or move the card to "Done"
      - name: Close Project Card
        if: |
          github.event.action == 'closed' &&
          ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
          (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues'))
        uses: asmfnk/my-github-project-automation@v0.5.0
        with:
          project: ${{ matrix.project }}
          column: 'Done'
          repo-token: ${{ secrets.PROJECT_BOARD_AUTOMATION_PAT }}

  remove_project_issues:
    needs: setup-matrixJson
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup-matrixJson.outputs.matrix) }}
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.issue.labels.*.name, 'good first issue')}} || ${{ !contains(github.event.issue.labels.*.name, 'help wanted') }}
    steps:
        # When an issue has a tag removed
        # Remove the card from the board
      - name: Remove Project Card
        if: |
          github.event.action == 'unlabeled' &&
          ((matrix.label == 'good first issue' && matrix.project == 'Beginner Issues') ||
          (matrix.label == 'help wanted' && matrix.project == 'Help Wanted Issues')) 
        uses: alex-page/github-project-automation-plus@v0.8.1
        with:
          project: ${{ matrix.project }}
          column: 'To do'
          repo-token: ${{ secrets.PROJECT_BOARD_AUTOMATION_PAT }}
          action: delete
